# -*- coding: utf-8 -*-
"""Decisiontree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1afmSr-s_ZjIBmbFMaEDJotDI4zsI16MT
"""

import pandas as pd #Used to data in dataframe
import numpy as np
df = pd.read_excel('/content/melb_data.xlsx')
df

np.where(dataset.applymap(lambda Suburb: Suburb == ''))

dataset[dataset['Suburb'] == ''].index

dataset.isna().sum()

dataset.columns

features=['Rooms','Bathroom','Landsize','Lattitude','Longtitude']
X=dataset[features]
X.describe()

y=dataset.Price
y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)
X_train

X_test

y_train

y_test

from sklearn.tree import DecisionTreeRegressor

regressor = DecisionTreeRegressor()

regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)
print ("Prediction of testing data by decision tree:", y_pred)

y_pred= regressor.predict([[2,1.0,202,-37.79960,144.99840]])
print("Predicted price of the house by Decision Tree: % d\n"% y_pred)

from sklearn.metrics import accuracy_score

accuracy= regressor.score(X_test,y_test)

print("Accuracy of Decision Tree for Regression Model in %:",accuracy*100)

from sklearn import tree
import matplotlib.pyplot as plt
plt.figure(figsize=(20,20))
tree.plot_tree(regressor, fontsize=12)
plt.show()

regressor.tree_.impurity